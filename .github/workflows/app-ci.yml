name: App CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up locale to Japanese
        run: |
          sudo apt-get update
          sudo apt-get install -y language-pack-ja
          sudo locale-gen ja_JP.UTF-8
          sudo update-locale LANG=ja_JP.UTF-8
          export LANG=ja_JP.UTF-8
          export LC_ALL=ja_JP.UTF-8
          echo "Locale is set to $LANG"

      - name: Set timezone to JST
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
          echo "Timezone is set to $(date)"

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - uses: pnpm/action-setup@v4
        with:
          version: 8
      - run: pnpm install
      - name: Run client test
        run: pnpm --filter './apps/client' run test

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          pnpm install
          pnpm dlx prisma generate
        working-directory: ./apps/server

      - name: Setup wrangler.toml
        env:
          DATABASE_NAME: ${{ secrets.D1_DATABASE_NAME }}
          DATABASE_ID: ${{ secrets.D1_DATABASE_ID }}
          API_KEY: ${{ secrets.API_KEY }}
        run: |
          echo "[[d1_databases]]" >> ./apps/server/wrangler.toml
          echo "binding = \"DB\"" >> ./apps/server/wrangler.toml
          echo "database_name = \"${DATABASE_NAME}\"" >> ./apps/server/wrangler.toml
          echo "database_id = \"${DATABASE_ID}\"" >> ./apps/server/wrangler.toml
          echo "migrations_dir = \"./infra/migrations/\"" >> ./apps/server/wrangler.toml
          echo "[vars]" >> ./apps/server/wrangler.toml
          echo "API_KEY = \"${API_KEY}\"" >> ./apps/server/wrangler.toml

      - name: Deploy app
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          packageManager: pnpm
          workingDirectory: apps/server
